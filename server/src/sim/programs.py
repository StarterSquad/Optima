ALL_PROGRAMS_SOURCE = \"""Short name;Full program name;Category;Parameter 1;Parameter 2;Parameter 3;Par. 1 name;Par. 1 pop;Par. 2 name;Par. 2 pop;Par. 3 name;Par. 3 pop;Coverage definitionCondoms;Condom promotion and distribution;Prevention;M.condom.reg[:];M.condom.cas[:];;Condoms | Proportion of sexual acts in which condoms are used with regular partners;All;Condoms | Proportion of sexual acts in which condoms are used with casual partners;All;;;Number/Percentage of individuals from population reached with condomsSBCC;Social and behavior change communication;Prevention;M.condom.reg[:];M.condom.cas[:];;Condoms | Proportion of sexual acts in which condoms are used with regular partners;All;Condoms | Proportion of sexual acts in which condoms are used with casual partners;All;;;Number/Percentage of individuals from population reached with interpersonal communicationSTI;Diagnosis and treatment of sexually transmissible infections;Prevention;M.stiprevulc[:];M.stiprevdis[:];;STI | Prevalence of ulcerative STIs;All;STI | Prevalence of discharging STIs;All;;;Number/Percentage of individuals from population tested/treated for STIsVMMC;Voluntary medical male circumcision;Prevention;M.numcircum[:];M.circum[:];;Circumcision | Number of medical male circumcisions performed per year;All;Circumcision | Proportion of males who are circumcised;All;;;Number of voluntary medical male circumcisions performed in the last 12 months/Proportion of males who are circumcisedFSW programs;Programs for female sex workers and clients;Prevention;M.condom.com[FSW];M.condom.com[Clients];M.hivtest[FSW];Condoms | Proportion of sexual acts in which condoms are used with commercial partners;FSW;Condoms | Proportion of sexual acts in which condoms are used with commercial partners;Clients;Testing | Proportion of people who are tested for HIV each year;FSW;Number/Percentage of sex workers reached with HIV prevention programs MSM programs;Programs for men who have sex with men;Prevention;M.condom.reg[MSM];M.condom.cas[MSM];;Condoms | Proportion of sexual acts in which condoms are used with regular partners;MSM;Condoms | Proportion of sexual acts in which condoms are used with casual partners;MSM;;;Number/Percentage of MSM reached with HIV prevention programsPWID programs;Programs for people who inject drugs;Prevention;M.hivtest[PWID];M.condom.reg[PWID];M.condom.cas[PWID];Testing | Proportion of people who are tested for HIV each year;PWID;Condoms | Proportion of sexual acts in which condoms are used with regular partners;PWID;Acts | Number of sexual acts per person per year with casual partners;PWID;Number/Percentage of PWID reached with HIV prevention programs - defined package of servicesOST;Opiate substitution therapy;Prevention;M.numost;;;Injecting drug use | Number of people on OST;All;;;;;Number of people on opioid substitution therapy (OST)NSP;Needle-syringe program;Prevention;M.sharing[:];;;Injecting drug use | Proportion of injections using receptively shared needle-syringes;All;;;;;Number/Percentage of PWID reached with HIV prevention programs - defined package of servicesCash transfers;Cash transfers for HIV risk reduction;Prevention;M.numacts.reg[:];M.numacts.cas[:];;Acts | Number of sexual acts per person per year with regular partners;All;Condoms | Proportion of sexual acts in which condoms are used with casual partners;All;;;Number of women 10-24 reached with cash transfers in the past 12 monthsPrEP;Pre-exposure prophylaxis;Prevention;M.prep[:];;;PrEP | Proportion of risk encounters covered by PrEP;All;;;;;Number of individuals who received ARVs for Pre-Exposure ProphylaxisPEP;Post-exposure prophylaxis;Care and treatment;;;;;;;;;;Number of persons provided with post-exposure prophylaxis (PEP)HTC;HIV testing and counseling;Care and treatment;M.hivtest[:];;;Testing | Proportion of people who are tested for HIV each year;All;;;;;Number/Percentage of individuals from population who received an HIV test and know their resultsART;Antiretroviral therapy;Care and treatment;M.txtotal;;;Treatment | Number of PLHIV on ART;All;;;;;Number of individuals living with HIV receiving antiretroviral therapyPMTCT;Prevention of mother-to-child transmission;Care and treatment;M.numpmtct;;;PMTCT | Number of pregnant women receiving Option B/B+;All;;;;;Number of HIV-positive pregnant women who receive antiretrovirals to reduce the risk of mother-to-child transmissionOVC;Orphans and vulnerable children;Care and treatment;;;;;;;;;;Number/Percentage of orphaned and vulnerable children aged 0-17 years whose households received free basic external support in caring for the childOther care;Other care;Care and treatment;;;;;;;;;;Number of eligible individuals provided with a minimum of one care serviceMGMT;Management;Management and administration;;;;;;;;;;N/AHR;HR and training;Management and administration;;;;;;;;;;N/AENV;Enabling environment;Management and administration;;;;;;;;;;N/ASP;Social protection;Other;;;;;;;;;;N/AM&E;Monitoring, evaluation, surveillance, and research;Other;;;;;;;;;;N/AINFR;Health infrastructure;Other;;;;;;;;;;N/AOther;Other costs;Other;;;;;;;;;;"""fields = {0:"short_name",1:"name",2:"category"}param_cols = [3,4,5]def programs():    #TODO cleanup pops when no limitation for populations is in place    import re    from parameters import maybe_bool    result = []    lines = [l.strip() for l in ALL_PROGRAMS_SOURCE.split('\n')][2:-1]    split_lines = [l.split(';') for l in lines]    for line in split_lines:        entry = dict([(fields[key], maybe_bool(line[key]) ) for key in fields])        params = []        for col in param_cols:            if line[col]:                param, pops = re.match('M\.([^[]+)(?:\[(.+?)\])?',line[col]).groups()                if pops is None: pops=''                params.append({'signature': param.split('.'), 'pops':pops.replace(':','').split(',')})        entry['parameters'] = params        result.append(entry)    return resultprogram_list = programs()def programs_for_input_key(key, programs = None): #params is the output of parameters.parameters() method    from parameters import input_parameters    if not programs or not any(item for item in programs): programs = program_list    params = input_parameters(key)    result = {}    keys = None    for param in params:        keys = param.get('keys')        if keys is not None:            for program in programs:                program_name = program['short_name']                for parameter in program['parameters']:                    current_parameter = parameter                    if 'value' in current_parameter: current_parameter = current_parameter['value']                    if current_parameter['signature']==keys:                        if program_name not in result:                            result[program_name] = []                        pops = current_parameter['pops']                        if pops and pops!=['']:                            result[program_name].extend(pops)    return resultdef program_categories():    result = []    next_category = None    for p in program_list:        current_category = p['category']        if next_category is not None and next_category['category']==current_category:            next_category['programs'].append({'short_name':p['short_name'], 'name':p['name']})        else:            if next_category is not None: result.append(next_category)            next_category = {'category':current_category}            next_category['programs'] = []    if next_category is not None: result.append(next_category)    return result