- stat: path=/home/{{ user }}/deploy.key
  register: deploy_key

- name: Copy over deploy key
  action: copy src=private/deploy.key dest=/home/{{ user }}/deploy.key
  become_user: "{{ user }}"
  when: deploy_key.stat.exists == False

- name: Clone down {{ service_name }} repo
  action: git repo="{{ repo }}" dest=/home/{{ user }}/installations/{{ service_name }}/ version={{ branch }} accept_hostkey=yes force=yes
  become_user: "{{ user }}"

- name: Copy over config
  action: copy src=config/{{ service_name }}.config.py dest=/home/{{ user }}/installations/{{ service_name }}/server/config.py force=yes
  become_user: "{{ user }}"

- name: Install {{ service_name }} dependencies
  action: shell /software/anaconda/bin/pip install -r /home/{{ user }}/installations/{{ service_name }}/server/localrequirements.txt

- name: Set up celery systemd service
  action: template src=celery.service dest=/etc/systemd/system/{{ service_name }}celery.service

- name: Enable celery systemd service
  action: service name="{{ service_name }}celery" enabled=yes

- name: Set up systemd service
  action: template src=web.service dest=/etc/systemd/system/{{ service_name }}.service

- name: Enable systemd service
  action: service name={{ service_name }} enabled=yes
